server.servlet.context-path=/dev-rest
# master
# hikari
# \u8BBE\u7F6E\u8FDE\u63A5\u6C60\u7C7B\u578B\uFF0C\u9ED8\u8BA4\u81EA\u52A8\u83B7\u53D6\uFF08\u53EF\u9009\uFF09
spring.datasource.master.type=com.zaxxer.hikari.HikariDataSource
# \u8FDE\u63A5\u6C60\u4E2D\u5141\u8BB8\u7684\u6700\u5C0F\u7A7A\u95F2\u8FDE\u63A5\u6570 - \u9ED8\u8BA4\u503C\uFF1A10\u3002
spring.datasource.master.hikari.minimum-idle=10
# \u8FDE\u63A5\u6C60\u4E2D\u5141\u8BB8\u7684\u6700\u5927\u8FDE\u63A5\u6570\uFF0C\u5305\u62EC\u95F2\u7F6E\u548C\u4F7F\u7528\u4E2D\u7684\u8FDE\u63A5 - \u9ED8\u8BA4\u503C\uFF1A10
spring.datasource.master.hikari.maximum-pool-size=20
# \u8FDE\u63A5\u6C60\u4E2D\u5141\u8BB8\u95F2\u7F6E\u7684\u6700\u957F\u65F6\u95F4 - \u9ED8\u8BA4\u503C\uFF1A10\u5206\u949F
spring.datasource.master.hikari.idle-timeout=600000
# \u4E00\u4E2A\u8FDE\u63A5\u751F\u547D\u65F6\u957F\uFF08\u6BEB\u79D2\uFF09\uFF0C\u8D85\u65F6\u800C\u6CA1\u88AB\u4F7F\u7528\u5219\u88AB\u91CA\u653E - \u9ED8\u8BA4\u503C\uFF1A30\u5206\u949F
spring.datasource.master.hikari.max-lifetime=36000000
# \u8FDE\u63A5\u8D85\u65F6\u65F6\u95F4 - \u9ED8\u8BA4\u503C\uFF1A30\u79D2
spring.datasource.master.hikari.connection-timeout=60000
# \u8FDE\u63A5\u6D4B\u8BD5\u67E5\u8BE2
spring.datasource.master.hikari.connection-test-query=SELECT 1
# \u4E8B\u52A1\u81EA\u52A8\u63D0\u4EA4
spring.datasource.master.hikari.auto-commit=true
# \u6307\u5B9A\u8FDE\u63A5\u6C60\u7684\u540D\u79F0
spring.datasource.master.hikari.pool-name=DatebookHikariCP
# \u8FDE\u63A5\u88AB\u6D4B\u8BD5\u6D3B\u52A8\u7684\u6700\u957F\u65F6\u95F4 - \u9ED8\u8BA4\u503C\uFF1A5\u79D2\u3002
spring.datasource.master.hikari.validation-timeout=5000

#mysql
spring.datasource.master.jdbc-url=jdbc:mysql://${MYSQL_HOST:127.0.0.1}:${MYSQL_PORT:3306}/${MYSQL_DATABASE:rest}?characterEncoding=utf8&autoReconnect=true&useSSL=${MYSQL_SSL_ENABLED:false}&rewriteBatchedStatements=true
spring.datasource.master.username=${MYSQL_USERNAME:root}
spring.datasource.master.password=${MYSQL_PASSWORD:mysql@com}


# slave1
# \u8BBE\u7F6E\u8FDE\u63A5\u6C60\u7C7B\u578B\uFF0C\u9ED8\u8BA4\u81EA\u52A8\u83B7\u53D6\uFF08\u53EF\u9009\uFF09
spring.datasource.slave1.type=com.zaxxer.hikari.HikariDataSource
# \u8FDE\u63A5\u6C60\u4E2D\u5141\u8BB8\u7684\u6700\u5C0F\u7A7A\u95F2\u8FDE\u63A5\u6570 - \u9ED8\u8BA4\u503C\uFF1A10\u3002
spring.datasource.slave1.hikari.minimum-idle=10
# \u8FDE\u63A5\u6C60\u4E2D\u5141\u8BB8\u7684\u6700\u5927\u8FDE\u63A5\u6570\uFF0C\u5305\u62EC\u95F2\u7F6E\u548C\u4F7F\u7528\u4E2D\u7684\u8FDE\u63A5 - \u9ED8\u8BA4\u503C\uFF1A10
spring.datasource.slave1.hikari.maximum-pool-size=20
# \u8FDE\u63A5\u6C60\u4E2D\u5141\u8BB8\u95F2\u7F6E\u7684\u6700\u957F\u65F6\u95F4 - \u9ED8\u8BA4\u503C\uFF1A10\u5206\u949F
spring.datasource.slave1.hikari.idle-timeout=600000
# \u4E00\u4E2A\u8FDE\u63A5\u751F\u547D\u65F6\u957F\uFF08\u6BEB\u79D2\uFF09\uFF0C\u8D85\u65F6\u800C\u6CA1\u88AB\u4F7F\u7528\u5219\u88AB\u91CA\u653E - \u9ED8\u8BA4\u503C\uFF1A30\u5206\u949F
spring.datasource.slave1.hikari.max-lifetime=36000000
# \u8FDE\u63A5\u8D85\u65F6\u65F6\u95F4 - \u9ED8\u8BA4\u503C\uFF1A30\u79D2
spring.datasource.slave1.hikari.connection-timeout=60000
# \u8FDE\u63A5\u6D4B\u8BD5\u67E5\u8BE2
spring.datasource.slave1.hikari.connection-test-query=SELECT 1
# \u4E8B\u52A1\u81EA\u52A8\u63D0\u4EA4
spring.datasource.slave1.hikari.auto-commit=true
# \u6307\u5B9A\u8FDE\u63A5\u6C60\u7684\u540D\u79F0
spring.datasource.slave1.hikari.pool-name=DatebookHikariCP
# \u8FDE\u63A5\u88AB\u6D4B\u8BD5\u6D3B\u52A8\u7684\u6700\u957F\u65F6\u95F4 - \u9ED8\u8BA4\u503C\uFF1A5\u79D2\u3002
spring.datasource.slave1.hikari.validation-timeout=5000

#mysql
spring.datasource.slave1.jdbc-url=jdbc:mysql://${MYSQL_HOST:127.0.0.1}:${MYSQL_PORT:3306}/rest_read_only?characterEncoding=utf8&autoReconnect=true&useSSL=${MYSQL_SSL_ENABLED:false}&rewriteBatchedStatements=true
spring.datasource.slave1.username=${MYSQL_USERNAME:root}
spring.datasource.slave1.password=${MYSQL_PASSWORD:mysql@com}


#mybatis ???? session statement
#mybatis.configuration.local-cache-scope=session
mybatis.configuration.cacheEnabled=true
mybatis.configuration.mapUnderscoreToCamelCase=true
mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl

#redis  lettuce \u9ED8\u8BA4\u6CA1\u6709\u5F00\u542F\u96C6\u7FA4\u62D3\u6251\u52A8\u6001\u5237\u65B0
#spring.redis.host=${REDIS_HOST:127.0.0.1}
#spring.redis.port=${REDIS_PORT:6379}
#spring.redis.password=${REDIS_PASSWORD:redis@com}
spring.redis.database=${REDIS_DB:0}
spring.redis.timeout=${REDIS_TIMEOUT:30000}
# \u8FDE\u63A5\u6C60\u6700\u5927\u8FDE\u63A5\u6570\uFF08\u4F7F\u7528\u8D1F\u503C\u8868\u793A\u6CA1\u6709\u9650\u5236\uFF09
spring.redis.lettuce.pool.max-active=8
# \u8FDE\u63A5\u6C60\u6700\u5927\u963B\u585E\u7B49\u5F85\u65F6\u95F4\uFF08\u4F7F\u7528\u8D1F\u503C\u8868\u793A\u6CA1\u6709\u9650\u5236\uFF09
spring.redis.lettuce.pool.max-wait=-1ms
# \u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5927\u7A7A\u95F2\u8FDE\u63A5 \u9ED8\u8BA48
spring.redis.lettuce.pool.max-idle=8
# \u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5C0F\u7A7A\u95F2\u8FDE\u63A5 \u9ED8\u8BA40
spring.redis.lettuce.pool.min-idle=4
# \u5728\u5173\u95ED\u5BA2\u6237\u7AEF\u8FDE\u63A5\u4E4B\u524D\u7B49\u5F85\u4EFB\u52A1\u5904\u7406\u5B8C\u6210\u7684\u6700\u957F\u65F6\u95F4\uFF0C\u5728\u8FD9\u4E4B\u540E\uFF0C\u65E0\u8BBA\u4EFB\u52A1\u662F\u5426\u6267\u884C\u5B8C\u6210\uFF0C\u90FD\u4F1A\u88AB\u6267\u884C\u5668\u5173\u95ED\uFF0C\u9ED8\u8BA4100ms
spring.redis.lettuce.shutdown-timeout=100

# \u96C6\u7FA4\u62D3\u6251\u5237\u65B0\u5468\u671F cluster \u96C6\u7FA4\u914D\u7F6E
spring.redis.lettuce.cluster.refresh.period=300s
#\u4F7F\u80FD\u96C6\u7FA4\u62D3\u6251\u81EA\u9002\u5E94\u5237\u65B0\uFF0C\u9ED8\u8BA4\u503C\uFF1Afalse
spring.redis.lettuce.cluster.refresh.adaptive=true
# \u96C6\u7FA4\u6240\u6709(\u4E3B\u3001\u4ECE)\u8282\u70B9\u5730\u5740\u4FE1\u606F
spring.redis.cluster.nodes=127.0.0.1:7701,127.0.0.1:7702,127.0.0.1:7703
# \u91CD\u5B9A\u5411\u7684\u6700\u5927\u6B21\u6570
spring.redis.cluster.max-redirects=3

# actuator
# \u66B4\u9732prometheus\u7AEF\u70B9
management.endpoints.web.exposure.include=prometheus,metrics,proxy
management.metrics.export.prometheus.enabled=true
management.endpoints.jmx.exposure.include=*
management.endpoint.health.show-details=always
# \u9ED8\u8BA4\u60C5\u51B5\u4E0B \u6709\u7AEF\u70B9\u90FD\u4E0D\u542F\u7528\uFF0C\u6B64\u65F6\u9700\u8981\u6309\u9700\u542F\u7528\u7AEF\u70B9
management.endpoints.enabled-by-default=true
management.endpoint.health.enabled=true
# \u7AEF\u70B9\u91C7\u96C6\u7AEF\u53E3
management.server.port=9080
#\u76D1\u63A7 http \u8BF7\u6C42\u7684 P99/P95 \u7B49\uFF0C\u5177\u4F53\u7684\u65F6\u95F4\u5206\u5E03\u53EF\u4EE5\u6839\u636E\u5B9E\u9645\u60C5\u51B5\u8BBE\u7F6E
management.endpoint.metrics.distribution.sla.http.server.requests=1ms,5ms,10ms,50ms,100ms,200ms,500ms,1s,5s
management.endpoint.metrics.distribution.tags.application=${spring.application.name}
# actuator address: http://ip:port/actuator/dev-rest/prometheus
management.endpoints.web.base-path=/actuator/dev-rest

# graceful
server.shutdown=graceful
# 20s
spring.lifecycle.timeout-per-shutdown-phase=20s



# jwt \u52A0\u5BC6\u5BC6\u94A5
config.jwt.secret=abcdefg1234567
# jwt token\u6709\u6548\u65F6\u957F
config.jwt.expire=3600
# jwt header \u540D\u79F0
config.jwt.header=token

# rabbitmq
spring.rabbitmq.addresses=${RABBITMQ_HOST:127.0.0.1}
spring.rabbitmq.port=${RABBITMQ_PORT:5672}
spring.rabbitmq.username=${RABBITMQ_USERNAME:rabbitmq}
spring.rabbitmq.password=${RABBITMQ_PASSWORD:rabbitmq@com}
spring.rabbitmq.virtual-host=/

# \u5BF9\u5E94 RabbitProperties.Retry \u7C7B \u5F00\u542F\u53D1\u9001\u673A\u5236
spring.rabbitmq.template.retry.enabled=true
# \u6700\u5927\u91CD\u8BD5\u6B21\u6570\u3002\u9ED8\u8BA4\u4E3A 3
spring.rabbitmq.template.retry.max-attempts=3
# \u91CD\u8BD5\u95F4\u9694\uFF0C\u5355\u4F4D\u4E3A\u6BEB\u79D2\u3002\u9ED8\u8BA4\u4E3A 1000
spring.rabbitmq.template.retry.initial-interval=1000

# mongodb
spring.data.mongodb.host=${MONGODB_HOST:127.0.0.1}
spring.data.mongodb.port=${MONGODB_PORT:27017}
spring.data.mongodb.database=rest
spring.data.mongodb.authentication-database=admin
spring.data.mongodb.username=${MONGODB_USERNAME:mongodb}
spring.data.mongodb.password=${MONGODB_PASSWORD:mongodb@com}
# \u9A7C\u5CF0\u547D\u540D strategy
spring.data.mongodb.field-naming-strategy=org.springframework.data.mapping.model.SnakeCaseFieldNamingStrategy
# \u81EA\u52A8\u521B\u5EFA\u7D22\u5F15
spring.data.mongodb.auto-index-creation=true

# arthas
arthas.agent-id=arthas-server-dev
arthas.tunnel-server=ws://127.0.0.1:7777/ws
arthas.app-name=rest-arthas
arthas.http-port=8563
arthas.telnet-port=3658
arthas.ip=0.0.0.0

# custom config
## aop log
controller.log.enabled=false

# gzip\u538B\u7F29
#server.compression.enabled=true
#server.compression.min-response-size=2048